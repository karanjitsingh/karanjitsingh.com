{
    "code": [
        {
            "title": "jstestadapter",
            "github": "https://github.com/karanjitsingh/jstestadapter",
            "desc": "JSTestAdapter is an open source test adapter extension for VSTest for running, well you guessed it, any kind of JavaScript tests. The adapter has been built with extensibility in mind to allow plugging in a variety of JavaScript test frameworks and environments.<br /><br />The adapter currently supports nodejs as its runtime environment and three most popular test runners - mocha, jasmine and jest. The JSTestAdapter allows you to leverage the VSTest capabilities for a seamless test execution experience across the VS IDE, CLI and the VSTest task in Azure Pipelines.<br /><br />JSTest's deep integration with VSTest and Azure Pipelines enables us to leverage the distribution capability for all three of the runners. It also provides the MSTest style capability to upload attachments from tests with <a target=\"_blank\" href=\"https://github.com/karanjitsingh/jstestadapter\">jstestadapter</a> extension. This is especially helpful for UI test failures, by simply uploading the screenshot of the UI we can figure out what went wrong in the Pipelines itself.",
            "img": "",
            "link": "",
            "year": "2018"
        },
        {
            "title": "Particle.js",
            "github": "https://github.com/karanjitsingh/particle.js",
            "desc": "Particle.js is a JavaScript canvas library for fancy particle animations. The fun animations you see on the main page of this website use Particle.js at its core. You can checkout another implementation of particle.js at <a target=\"_blank\" href=\"https://www.headout.com/careers\">Headout's careers page</a>.",
            "img": "./images/particlejs.png",
            "link": "",
            "year": "2017"
        },
        {
            "title": "SVG Path Parser",
            "github": "https://github.com/karanjitsingh/svg-path-parser",
            "desc": "SVG path parser is a custom path 2D parser written specifically for Particle.JS to support animation for any path. Particle.JS requires path length and nth point for each path element that is created in a path 2D, for this very reason I had to write a custom parser that converts those path elements into custom path functions which provide its length and a method to get the nth point on the path.",
            "img": "./images/svgpathparser.png",
            "link": "",
            "year": "2017"
        },
        {
            "title": "Neural Network to Play 2048",
            "github": "https://github.com/karanjitsingh/dqn-2048-python",
            "desc": "A reinforcement learning bot written in python that learns to play 2048 from the experience gained from playing it again and again. This project was done for my 6th semester Machine Learning course at Manipal Institute of Technology. The neural network for this project was written from scratch including the TD backpropagation algorithm.",
            "img": "./images/2048.png",
            "link": "",
            "year": "2017"
        },
        {
            "title": "IE CSE Website 2014-2015",
            "github": "https://github.com/karanjitsingh/iecse",
            "desc": "IE CSE is the official computer science club of manipal. Every year IE CSE hosts a website winter project for its new members to rebuild their website. This is the 2014-2015 version of the website. <br />Checkout the <a href=\"http://iecse.karanjitsingh.com\">live version</a>!",
            "img": "./images/iecse.png",
            "link": "",
            "year": "2014"
        },
        {
            "title": "Hospital Management System",
            "github": "",
            "desc": "A hospital management system for a charitable hospital based in Haridwar, India. Over the span of two years (2012-2013) I developed various modules including registration, inventory management, appointment scheduling, patient data maintenance etc, delivering a complete and integrated hospital management system written in .NET Framework and Microsoft SQL Server.",
            "img": "./images/hms.png",
            "link": "",
            "year": "2013"
        },
        {
            "title": "Snakes in Classic C",
            "github": "https://github.com/karanjitsingh/buoyancy/tree/master/Snakes",
            "desc": "My 12th grade final project for Computer Programming in C class. Checkout the <a href=\"/web/snakes\">showcase website</a>.",
            "img": "./images/snakes.png",
            "link": "",
            "year": "2013"
        },
        {
            "title": "Solar System 2D Simulation",
            "github": "",
            "desc": "",
            "img": "",
            "link": "/web/solarsystem",
            "year": "2011"
        },
        {
            "title": "Sudoku Solver",
            "github": "",
            "desc": "",
            "img": "",
            "link": "/web/sudoku",
            "year": "2010"
            
        },
        {
            "title": "Experimental Projects",
            "github": "",
            "desc": "",
            "img": "",
            "link": "/web/experimental",
            "year": "2010"
        }
    ],
    "about": "<span>Hi!</span>My name is Karan Jit Singh and I am a software engineer. I work in an engineering team at Microsoft that specializes in building high scale software products for software engineers.<br /><br />I've been a programmer since I was 9 years old and have been in love with computer science since the very day I starting learning to code. I occasionally dabble on the guitar, play chess and love watching Formula 1.<br /><br/>I went to college at Manipal Institute of Technology, Manipal where I completed my bachelor's degree in Computer Science and Engineering."
}
